import { InMemoryDbService } from 'angular-in-memory-web-api';
export class TrafficFlowData implements InMemoryDbService {
  createDb() {
    let departs= [
      // {"id": 1, "departTime": 2012, "position":  {"lat": 36.7596737, "lng": 3.1365537},"flow": 0.4},
      // {"id": 2, "departTime": 2012, "position":  {"lat": 36.7596737, "lng": 3.1365537},"flow": 0.4},
      // {"id": 3, "departTime": 2012, "position":  {"lat": 36.7596737, "lng": 3.1365537},"flow": 0.4},
      // {"id": 4, "departTime": 2012, "position":  {"lat": 36.7596737, "lng": 3.1365537},"flow": 0.4}
    ];
    let arrivals= [
      // {"id": 1, "position":  {"lat": 36.7596737, "lng": 3.1365537}},
      // {"id": 2, "position":  {"lat": 36.7596737, "lng": 3.1365537}}
    ];
    let accidents= [

    ];

    let vehicleTypes=[
      {"id": 1, "acceleration": 2012, "deceleration": 20, "width": 0.4, "height": 0.4, "length": 4, "minGap":2, "maxSpeed": 80},
      {"id": 2, "acceleration": 2012, "deceleration": 40, "width": 0.6, "height": 0.4, "length": 4, "minGap":2, "maxSpeed": 80}
    ];

    let vehpourcentage=[

    ];

    let recommandationTest =[
        {"id": 4, "lanes": [{"lane": 0, "recommandation": 0}, {"lane": 1, "recommandation": 2},{"lane": 2, "recommandation": 0} ]},
        {"id": 5, "lanes": [{"lane": 0, "recommandation": 0}, {"lane": 1, "recommandation": 2},{"lane": 2, "recommandation": 0} ]},
        {"id": 6, "lanes": [{"lane": 0, "recommandation": 0}, {"lane": 1, "recommandation": 'x'},{"lane": 2, "recommandation": 0} ]}
      ];
    let vslTest =[
        {"id": 1, "vsl": 80},
        {"id": 2, "vsl": 80},
        {"id": 3, "vsl": 80}
    ];
    let diagramData =
        {
      	"time":
      	[0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 450, 480, 510, 540, 570, 600, 630, 660, 690, 720, 750, 780, 810, 840, 870, 900, 930, 960, 990, 1020, 1050, 1080, 1110, 1140, 1170, 1200, 1230, 1260, 1290, 1320, 1350, 1380, 1410, 1440, 1470, 1500, 1530, 1560, 1590, 1620, 1650, 1680, 1710, 1740, 1770, 1800, 1830, 1860, 1890, 1920, 1950, 1980, 2010, 2040, 2070, 2100, 2130, 2160, 2190, 2220, 2250, 2280, 2310, 2340, 2370, 2400, 2430, 2460, 2490, 2520, 2550, 2580, 2610, 2640, 2670, 2700, 2730, 2760, 2790, 2820, 2850, 2880, 2910, 2940, 2970, 3000, 3030, 3060, 3090, 3120, 3150, 3180, 3210, 3240, 3270, 3300, 3330, 3360, 3390, 3420, 3450, 3480, 3510, 3540, 3570, 3600, 3630, 3660, 3690, 3720, 3750, 3780, 3810, 3840, 3870, 3900, 3930, 3960, 3990],
      	"no_control":
      	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1440.0, 3240.0, 3480.0, 4560.0, 3240.0, 4800.0, 3960.0, 3840.0, 4200.0, 3840.0, 3600.0, 4320.0, 2400.0, 3240.0, 3000.0, 3240.0, 3960.0, 4440.0, 4080.0, 4200.0, 3960.0, 4320.0, 4200.0, 3960.0, 4080.0, 4080.0, 4200.0, 3960.0, 4320.0, 4080.0, 4080.0, 4200.0, 4080.0, 4200.0, 3600.0, 3600.0, 3960.0, 3840.0, 3720.0, 4200.0, 4200.0, 3600.0, 3480.0, 4080.0, 4080.0, 4080.0, 4320.0, 4080.0, 3720.0, 4320.0, 3840.0, 4320.0, 3960.0, 4080.0, 3960.0, 3960.0, 3840.0, 4080.0, 4200.0, 3840.0, 3840.0, 4080.0, 4200.0, 4320.0, 3960.0, 3960.0, 2880.0, 4320.0, 3840.0, 4320.0, 4080.0, 4080.0, 4200.0, 4680.0, 4440.0, 4200.0, 4440.0, 4080.0, 5160.0, 4080.0, 3120.0, 4080.0, 4440.0, 4200.0, 3720.0, 3960.0, 2760.0, 4080.0, 4560.0, 3240.0, 5640.0, 2880.0, 4560.0, 4440.0, 3720.0, 4200.0, 3840.0, 3120.0, 4680.0, 4200.0, 2880.0, 5040.0, 4440.0, 4080.0, 3480.0, 4200.0, 2880.0, 4200.0, 3720.0, 5040.0, 4320.0, 4200.0, 3840.0, 4200.0, 3480.0, 4080.0, 3600.0, 3840.0, 4800.0, 3840.0, 4080.0, 4200.0, 3840.0, 3840.0, 3480.0, 4063.64],
      	"with_control":
      	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1440.0, 3240.0, 3480.0, 4560.0, 3240.0, 4800.0, 3960.0, 3840.0, 4200.0, 3840.0, 3600.0, 4320.0, 2400.0, 3240.0, 3360.0, 3240.0, 3120.0, 2880.0, 2400.0, 2280.0, 2040.0, 2640.0, 1440.0, 3720.0, 3600.0, 2280.0, 3120.0, 3120.0, 3000.0, 2880.0, 3120.0, 3000.0, 2520.0, 2880.0, 2520.0, 2640.0, 2280.0, 2640.0, 3720.0, 3360.0, 3600.0, 3120.0, 1920.0, 3000.0, 1800.0, 3360.0, 3600.0, 3000.0, 3120.0, 3120.0, 2640.0, 2160.0, 3120.0, 2760.0, 3000.0, 3120.0, 1920.0, 3000.0, 2160.0, 2160.0, 3240.0, 2760.0, 2160.0, 2640.0, 2760.0, 3120.0, 2640.0, 3120.0, 2880.0, 2760.0, 2280.0, 3000.0, 3000.0, 4920.0, 4800.0, 5880.0, 6480.0, 6000.0, 5640.0, 6720.0, 5040.0, 6360.0, 6480.0, 6360.0, 5640.0, 6120.0, 6480.0, 5880.0, 5880.0, 6360.0, 6240.0, 6360.0, 5760.0, 5880.0, 5640.0, 6600.0, 5760.0, 5880.0, 6120.0, 5880.0, 6360.0, 5760.0, 6360.0, 5760.0, 6720.0, 6600.0, 5880.0, 6000.0, 5880.0, 3960.0, 3960.0, 4200.0, 4080.0, 4200.0, 4200.0, 3360.0, 3720.0, 3600.0, 5280.0, 3240.0, 4080.0, 4080.0, 4080.0, 4440.0, 3240.0, 4581.82]
    };
    let polyline = [
      {
        "edge_id": "196547668#0",
        "edge_coords": {
          "start": {
            "lng": 3.0037022322720937,
            "lat":36.751255140963266
          },
          "end":{
            "lng": 2.9999397317058403,
            "lat":36.749513222867
          }
        },
          "current_speed": 20.0,
          "max_speed": 80.0,
          "density": 32,
          "vsl_state": false,
          "congestion_detected": false
      },
      {
        "edge_id": "196547668#0",
        "edge_coords": {
          "start": {
            "lng": 2.994933,
            "lat":36.749634
          },
          "end":{
            "lng": 2.990867,
            "lat":36.748765
          }
        },
          "current_speed": 70.0,
          "max_speed": 80.0,
          "density": 50,
          "vsl_state": false,
          "congestion_detected": false
      }

    ]
    let result =
      [{
        "type": "no control",
        "meanTravelTime": 917.0341011067903,
        "meanWaintingTime": 37.40203410110679,
        "numLC": 2.4582710140592283,
        "fuelRate": 0.10457344530016661,
        "co2Rate": 243.2755396686484,
        "noxRate": 0.09936030577185291
      }, {
        "type": "vsl_lc",
        "meanTravelTime": 646.2002401681177,
        "meanWaintingTime": 0.6967877514259982,
        "numLC": 3.4211948363854696,
        "fuelRate": 0.08304804036941955,
        "co2Rate": 193.2010084274209,
        "noxRate": 0.07661824609135458
      }, {
        "type": "vsl_lc_noControl_comp",
        "meanTravelTime": -29.533673896292054,
        "meanWaintingTime": -98.13703246849512,
        "numLC": 39.17077559061359,
        "fuelRate": -20.584006646200425,
        "co2Rate": -20.583463224223504,
        "noxRate": -22.88847593999733
      }];


    return {departs, arrivals, accidents, vehicleTypes,
            vehpourcentage, recommandationTest, vslTest, diagramData,
            polyline, result};
  }
}
